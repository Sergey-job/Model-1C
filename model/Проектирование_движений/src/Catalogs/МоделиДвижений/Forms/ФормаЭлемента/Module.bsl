
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПриЧтенииСозданииНаСервере();
	
	ПоказатьБУ = Истина;
	ПоказатьНУ = Истина;
	ВысотаСтрок = 1;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СохранитьСписокДвижений(ТекущийОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВысотаСтрокПриИзменении(Элемент)
	
	Элементы.СписокДвиженийОписание.Высота = ВысотаСтрок;
	Элементы.СписокДвиженийСуммаДтБУ.Высота = ВысотаСтрок;
	Элементы.СписокДвиженийСуммаДтНУ.Высота = ВысотаСтрок;
	Элементы.СписокДвиженийСуммаКтБУ.Высота = ВысотаСтрок;
	Элементы.СписокДвиженийСуммаКтНУ.Высота = ВысотаСтрок;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДвижений

&НаКлиенте
Процедура СписокДвиженийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ДобавитьНовуюСтрокуВСписокДвижений(Ложь, Копирование);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиНаверх(Команда)
	
	ТекущиеДанные = Элементы.СписокДвижений.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоллекцияСтрок = СписокДвижений.ПолучитьЭлементы();
	
	НоваяСтрок = КоллекцияСтрок.Добавить();
	
	Элементы.СписокДвижений.ТекущаяСтрока = НоваяСтрок.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппуДвижений(Команда)
	
	ДобавитьНовуюСтрокуВСписокДвижений(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиТаблицу(Команда)
	ТабличныйДокумент = ВывестиТаблицуНаСервере();
	ТабличныйДокумент.Показать(СтрШаблон(НСтр("ru = 'Модель движений ""%1""'"), Объект.Наименование));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	ЗаполнитьСписокДвижений();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДвижений()

	СписокДвиженийДерево = РеквизитФормыВЗначение("СписокДвижений");
	СписокДвиженийДерево.Строки.Очистить();
	
	Для каждого ДанныеСтроки Из Объект.СписокДвижений Цикл
		
		Если ЗначениеЗаполнено(ДанныеСтроки.Родитель) Тогда
			РодительСтроки = СписокДвиженийДерево.Строки.Найти(ДанныеСтроки.Родитель, "ИД", Истина);
		Иначе	
			РодительСтроки = СписокДвиженийДерево;
		КонецЕсли;
		
		НоваяСтрока = РодительСтроки.Строки.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтроки);
		
	КонецЦикла;

	ЗначениеВРеквизитФормы(СписокДвиженийДерево, "СписокДвижений");
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСписокДвижений(ТекущийОбъект)

	ТекущийОбъект.СписокДвижений.Очистить();
	
	КоллекцияСтрок = Новый Массив;
	КоллекцияСтрок.Добавить(Новый Структура("ИД,КоллекцияСтрок", Неопределено, СписокДвижений.ПолучитьЭлементы()));
	
	Пока Истина Цикл
		
		НоваяКоллекцияСтрок = Новый Массив;
		
		Для каждого СтруктураСтрок Из КоллекцияСтрок Цикл
			
			Для каждого СтрокаИсточник Из СтруктураСтрок.КоллекцияСтрок Цикл
			
				КоллекцияСтрокИсточника = СтрокаИсточник.ПолучитьЭлементы();
				Если КоллекцияСтрокИсточника.Количество() <> 0 Тогда
					Если НЕ ЗначениеЗаполнено(СтрокаИсточник.ИД) Тогда
						СтрокаИсточник.ИД = Новый УникальныйИдентификатор;
					КонецЕсли;
					СтрокаИсточник.ЭтоГруппаДвижений = Истина;
					НоваяКоллекцияСтрок.Добавить(Новый Структура("ИД,КоллекцияСтрок", СтрокаИсточник.ИД, КоллекцияСтрокИсточника));
				КонецЕсли;
				
				ДанныеСтроки = ТекущийОбъект.СписокДвижений.Добавить();
				ЗаполнитьЗначенияСвойств(ДанныеСтроки, СтрокаИсточник);
				Если ЗначениеЗаполнено(СтруктураСтрок.ИД) Тогда
					ДанныеСтроки.Родитель = СтруктураСтрок.ИД;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если НоваяКоллекцияСтрок.Количество() = 0 Тогда
			Прервать;
		КонецЕсли;
		
		КоллекцияСтрок = НоваяКоллекцияСтрок;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНовуюСтрокуВСписокДвижений(ЭтоГруппаДвижений, Копирование = Ложь)
	
	// Новая строка добавляется
	//  - если текущая строка в группе - в группу
	//  - если текущая строка группа - в группу
	//  - в остальных случаях - на верхний уровень
	
	ТекущаяГруппаСтрок = Неопределено;
	
	ТекущиеДанные = Элементы.СписокДвижений.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ТекущиеДанные.ЭтоГруппаДвижений И НЕ ЭтоГруппаДвижений Тогда
			ТекущаяГруппаСтрок = ТекущиеДанные;
		Иначе
			ТекущаяГруппаСтрок = ТекущиеДанные.ПолучитьРодителя();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТекущаяГруппаСтрок <> Неопределено Тогда
		КоллекцияЭлементов = ТекущаяГруппаСтрок.ПолучитьЭлементы();
		НоваяСтрока = КоллекцияЭлементов.Добавить();
	Иначе
		КоллекцияЭлементов = СписокДвижений.ПолучитьЭлементы();
		НоваяСтрока = КоллекцияЭлементов.Добавить();
	КонецЕсли;
	
	Если Копирование И ТекущиеДанные <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные,, "ИД");
	КонецЕсли;
	
	Если НЕ Копирование Тогда
		НоваяСтрока.ЭтоГруппаДвижений = ЭтоГруппаДвижений;
	КонецЕсли;
	
	Элементы.СписокДвижений.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Элементы.СписокДвижений.ИзменитьСтроку();

КонецПроцедуры

&НаСервере
Функция ВывестиТаблицуНаСервере()
	
	Результат = Новый ТабличныйДокумент;
	
	Макет = Справочники.МоделиДвижений.Получитьмакет("Макет");
	
	Если ПоказатьБУ И ПоказатьНУ Тогда
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка_БУ_НУ");
		ОбластьГруппа = Макет.ПолучитьОбласть("Группа_БУ_НУ");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка_БУ_НУ");
	ИначеЕсли ПоказатьБУ Тогда
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка_БУ");
		ОбластьГруппа = Макет.ПолучитьОбласть("Группа_БУ");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка_БУ");
	Иначе
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка_НУ");
		ОбластьГруппа = Макет.ПолучитьОбласть("Группа_НУ");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка_НУ");
	КонецЕсли;
	
	Результат.Вывести(ОбластьШапка);
	
	ВывестиТаблицуНаСервереРекурсивно(СписокДвижений.ПолучитьЭлементы(), "", ОбластьГруппа, ОбластьСтрока, Результат);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ВывестиТаблицуНаСервереРекурсивно(КоллекцияСтрок, НомерГруппы, ОбластьГруппа, ОбластьСтрока, Результат)
	
	Номер = 1;
	Для каждого ДанныеСтроки Из КоллекцияСтрок Цикл
		
		Если ДанныеСтроки.Отключено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДанныеСтроки.ЭтоГруппаДвижений Тогда
			ТекущаяОбласть = ОбластьГруппа;
		Иначе
			ТекущаяОбласть = ОбластьСтрока;
		КонецЕсли;
		
		ТекущаяОбласть.Параметры.Заполнить(ДанныеСтроки);
		
		НомерСтроки = ?(ЗначениеЗаполнено(НомерГруппы), НомерГруппы + ".", "") + Формат(Номер, "ЧГ=");
		ТекущаяОбласть.Параметры.Номер = НомерСтроки;
		
		Результат.Вывести(ТекущаяОбласть);
		
		ВывестиТаблицуНаСервереРекурсивно(ДанныеСтроки.ПолучитьЭлементы(), НомерСтроки, ОбластьГруппа, ОбластьСтрока, Результат);
		
		Номер = Номер + 1;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

